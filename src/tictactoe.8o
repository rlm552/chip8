#################################################
#
# Tic-Tac-Toe Game
# By Rory McGurty
#
# Made this game to learn basics of Octo.
# Use W, A, S, D to move. Press E to lay down
# an X or an O.
# Font: http://www.dafont.com/04b-03.font
#   0-25 A-Z
#   26-51 a-z
#   52-62 .!?-:#()*+
#   63 whitespace
#################################################

:const W_KEY 5
:const A_KEY 7
:const S_KEY 8
:const D_KEY 9
:const E_KEY 6

:const tie-text-length 12
:const win-text-length1 14
:const win-text-length2 14

# reserve v3-v6 for board-state
:alias turn v7
:alias numofmoves vd

#############    Sprites  #######################
: foreground-block
	0xFE 0xFE 0xFE 0xFE 0xFE 0xFE 0xFE	

: Vblock
	0x80 0x80 0x80 0x80 0x80 0x80 0x80
	
: Hblock8
	0xFF
	
: Hblock7
	0xFE
	
: Xsprite
	0x88 0x50 0x20 0x50 0x88

: smallXsprite
	0xA0 0x40 0xA0
	
: Osprite
	0xF8 0x88 0x88 0x88 0xF8
	
: smallOsprite
	0xE0 0xA0 0xE0
	
: tsprite
	0x40 0xE0 0x40 0x60

: usprite
	0xA0 0xA0 0xE0
	
: rsprite
	0xE0 0x80 0x80

: nsprite
	0xE0 0xA0 0xA0
	
: colonsprite
	0x80 0x00 0x80
	
: font
  0x60 0x90 0x90 0xF0 0x90 0xE0 0x90 0xE0 0x90 0xE0 0x60 0x80 0x80 0x80 0x60 0xE0 0x90 0x90 0x90 0xE0 0xE0 0x80 0xE0 0x80 0xE0 0xE0 0x80 0xE0 0x80 0x80 0x70 0x80 0xB0 0x90 0x70 0x90 0x90 0xF0 0x90 0x90 0xE0 0x40 0x40 0x40 0xE0 0x30 0x10 0x10 0x90 0x60 0x90 0xA0 0xC0 0xA0 0x90 0x80 0x80 0x80 0x80 0xE0 0x88 0xD8 0xA8 0x88 0x88 0x90 0xD0 0xB0 0x90 0x90 0x60 0x90 0x90 0x90 0x60 0xE0 0x90 0x90 0xE0 0x80 0x60 0x90 0x90 0xB0 0x60 0xE0 0x90 0x90 0xE0 0x90 0x70 0x80 0x60 0x10 0xE0 0xE0 0x40 0x40 0x40 0x40 0x90 0x90 0x90 0x90 0x60 0x90 0x90 0xA0 0xA0 0x40 0x88 0xA8 0xA8 0xA8 0x50 0x90 0x90 0x60 0x90 0x90 0x90 0x90 0x70 0x10 0x60 0xE0 0x20 0x40 0x80 0xE0 0x0 0x70 0x90 0x90 0x70 0x80 0xE0 0x90 0x90 0xE0 0x0 0x60 0x80 0x80 0x60 0x10 0x70 0x90 0x90 0x70 0x0 0x60 0xB0 0xC0 0x60 0x20 0x40 0xE0 0x40 0x40 0x70 0x90 0xF0 0x10 0x60 0x80 0xE0 0x90 0x90 0x90 0x40 0x0 0x40 0x40 0x40 0x40 0x0 0x40 0x40 0x80 0x80 0x90 0xA0 0xE0 0x90 0x40 0x40 0x40 0x40 0x40 0x0 0xF0 0xA8 0xA8 0xA8 0x0 0xE0 0x90 0x90 0x90 0x0 0x60 0x90 0x90 0x60 0xE0 0x90 0xE0 0x80 0x80 0x70 0x90 0xF0 0x10 0x10 0x0 0xA0 0xC0 0x80 0x80 0x0 0x70 0xC0 0x30 0xE0 0x40 0xE0 0x40 0x40 0x20 0x0 0x90 0x90 0x90 0x70 0x0 0x90 0x90 0xA0 0x40 0x0 0xA8 0xA8 0x50 0x50 0x0 0xA0 0x40 0x40 0xA0 0x0 0x90 0x70 0x10 0x60 0x0 0xF0 0x20 0x40 0xF0 0x0 0x0 0x0 0x0 0x80 0x80 0x80 0x80 0x0 0x80 0xE0 0x10 0x60 0x0 0x40 0x0 0x0 0xE0 0x0 0x0 0x0 0x80 0x0 0x80 0x0 0x50 0xF8 0x50 0xF8 0x50 0x40 0x80 0x80 0x80 0x40 0x80 0x40 0x40 0x40 0x80 0x0 0xA0 0x40 0xA0 0x0 0x0 0x40 0xE0 0x40 0x0 0x0 0x0 0x0 0x0 0x0
	
: tie-text
	0x8  0x13  0x3e  0x8  0x12  0x3e  0x0  0x3e  0x13  0x8  0x4  0x35
	
: winning-text1
	0xf  0xb  0x0  0x18  0x4  0x11  0x3e  0x17  0x3e  0x16  0x8  0xd  0x12  0x35  
	
: winning-text2
  0xf  0xb  0x0  0x18  0x4  0x11  0x3e  0xe  0x3e  0x16  0x8  0xd  0x12  0x35	

	
#############    Sprites  #######################
: multiply-i
  loop
    i += ve
    v0 -= 1
    if v0 != 0 then
  again
;

: draw-grid
	va := 27
	vb := 5
	i := Vblock
	sprite va vb 7
	
	va += 8
	sprite va vb 7
	
	va := 27
	vb += 8
	sprite va vb 7
	
	va += 8
	sprite va vb 7
	
	va := 27
	vb += 8
	sprite va vb 7
	
	va += 8
	sprite va vb 7
	
	va := 20
	vb := 12
	i := Hblock8
	sprite va vb 1
	
	va += 8
	sprite va vb 1
	
	va += 8
	i := Hblock7
	sprite va vb 1
	
	va := 20
	vb += 8
	i := Hblock8
	sprite va vb 1
	
	va += 8
	sprite va vb 1
	
	va += 8
	i := Hblock7
	sprite va vb 1	
;

: draw-player-turn
	#i := smallXsprite
;

: handle-e-press
	# check if block occupied
	# update board
	if turn == 0 begin
		update-board-statex
		i := Xsprite
		turn := 1
	else
		update-board-stateo
		i := Osprite
		turn := 0
	end
	
	if vf == 1 begin
		vc := 20
		buzzer := vc
		return # if vf == 1 then board space already occupied
	end		
	
	va += 1
	vb += 1
	sprite va vb 5
	
	vc := 1
	numofmoves += vc
	check-for-win-or-tie
	
	i := foreground-block
	va -= 1
	vb -= 1
;

: check-for-win-or-tie	

	
	
	if turn == 1 begin
		v8 := v3
		v9 := v4
	else
		v8 := v5
		v9 := v6
	end
	
	vc := 0b00000111 # Upper row
	vc &= v8
	if vc == 0b00000111 then jump game-over-win
	
	vc := 0b000111000 # Middle row
	vc &= v8
	if vc == 0b00111000 then jump game-over-win
	
	vc := 0b01001001 # 1st column
	vc &= v8
	if vc == 0b01001001 then jump game-over-win
	
	vc := 0b10010010 # 2nd column
	vc &= v8
	if vc == 0b10010010 then jump game-over-win
	
	vc := 0b01010100 # 2nd diagonal
	vc &= v8
	if vc == 0b01010100 then jump game-over-win
	
	if v9 == 0b0000001 begin
		vc := 0b11000000 # Lower row
		vc &= v8
		if vc == 0b11000000 then jump game-over-win
		
		vc := 0b00100100 # 3rd column
		vc &= v8
		if vc == 0b00100100 then jump game-over-win
		
		vc := 0b00010001 # first diagonal
		vc &= v8
		if vc == 0b00010001 then jump game-over-win		
	end
	
	if numofmoves == 9 then jump game-over-tie
;

: title-screen
	loop
	again
;

: game-over-tie
	# Message "IT IS A TIE!"
	clear	
	
	vc := tie-text-length
	
	va := 4  # starting x position
	vb := 4  #  starting y position
	v8 := 0  # byte index
	
	loop	
		i := tie-text
		i += v8
		load v0
		
		i := font
		ve := 5
		if v0 != 0 then multiply-i				
		
		sprite va vb 5
		va += 5
		v8 += 1
		vc -= 1
		if vc != 0 then
	again	
	
	v1 := 60
	delay := v1
	loop 
		v1 := delay
		if v1 != 0 then
	again
	
	clear
	main
;

: game-over-win
	clear
	
	vc := 14
	va := 4  # starting x position
	vb := 4  #  starting y position
	v8 := 0  # byte index
	
	loop	
		i := winning-text1
		if turn == 0 then i := winning-text2
		i += v8
		load v0
		
		i := font
		ve := 5
		if v0 != 0 then multiply-i				
		
		sprite va vb 5
		va += 5
		if va == 49 begin
			va := 4
			vb += 6
		end
		v8 += 1
		vc -= 1
		if vc != 0 then
	again	
	
	v1 := 60
	delay := v1
	loop 
		v1 := delay
		if v1 != 0 then
	again
	
	clear
	main
;

: update-board-statex
	if va == 20 begin
		if vb == 5 then ve := 1		
		if vb == 13 then ve := 4		
		if vb == 21 then ve := 7
	end
	if va == 28 begin
		if vb == 5 then ve := 2	
		if vb == 13 then ve := 5	
		if vb == 21 then ve := 8
	end
	if va == 36 begin
		if vb == 5 then ve := 3		
		if vb == 13 then ve := 6		
		if vb == 21 then ve := 9
	end
	
	vf := 0
	
	if ve == 1 begin
		vc := 0b00000001
		vc &= v3
		if vc == 0b00000001 begin			
			vf := 1
			return
		else
			v3 += 0b00000001
		end		
	end
	
	if ve == 2 begin
		vc := 0b00000010
		vc &= v3
		if vc == 0b00000010 begin
			vf := 1
			return
		else
			v3 += 0b00000010
		end		
	end
	
	if ve == 3 begin
		vc := 0b00000100
		vc &= v3
		if vc == 0b00000100 begin
			vf := 1
			return
		else
			v3 += 0b00000100
		end		
	end
	
	if ve == 4 begin
		vc := 0b00001000
		vc &= v3
		if vc == 0b00001000 begin
			vf := 1
			return
		else
			v3 += 0b00001000
		end		
	end
	
	if ve == 5 begin
		vc := 0b00010000
		vc &= v3
		if vc == 0b00010000 begin
			vf := 1
			return
		else
			v3 += 0b00010000
		end		
	end
	
	if ve == 6 begin
		vc := 0b00100000
		vc &= v3
		if vc == 0b00100000 begin
			vf := 1
			return
		else
			v3 += 0b00100000
		end		
	end
	
	if ve == 7 begin
		vc := 0b01000000
		vc &= v3
		if vc == 0b01000000 begin
			vf := 1
			return
		else
			v3 += 0b01000000
		end		
	end
	
	if ve == 8 begin
		vc := 0b10000000
		vc &= v3
		if vc == 0b10000000 begin
			vf := 1
			return
		else
			v3 += 0b10000000
		end		
	end
	
	if ve == 9 begin
		if v4 == 0b00000001 begin
			vf := 1
			return
		else
			if ve == 9 then v4 := 0b00000001
		end
	end	
;

: update-board-stateo
	if va == 20 begin
		if vb == 5 then ve := 1		
		if vb == 13 then ve := 4		
		if vb == 21 then ve := 7
	end
	if va == 28 begin
		if vb == 5 then ve := 2	
		if vb == 13 then ve := 5	
		if vb == 21 then ve := 8
	end
	if va == 36 begin
		if vb == 5 then ve := 3		
		if vb == 13 then ve := 6		
		if vb == 21 then ve := 9
	end
	
	vf := 0
	
	if ve == 1 begin
		vc := 0b00000001
		vc &= v5
		if vc == 0b00000001 begin			
			vf := 1
			return
		else
			v5 += 0b00000001
		end		
	end
	
	if ve == 2 begin
		vc := 0b00000010
		vc &= v5
		if vc == 0b00000010 begin
			vf := 1
			return
		else
			v5 += 0b00000010
		end		
	end
	
	if ve == 3 begin
		vc := 0b00000100
		vc &= v5
		if vc == 0b00000100 begin
			vf := 1
			return
		else
			v5 += 0b00000100
		end		
	end
	
	if ve == 4 begin
		vc := 0b00001000
		vc &= v5
		if vc == 0b00001000 begin
			vf := 1
			return
		else
			v5 += 0b00001000
		end		
	end
	
	if ve == 5 begin
		vc := 0b00010000
		vc &= v5
		if vc == 0b00010000 begin
			vf := 1
			return
		else
			v5 += 0b00010000
		end		
	end
	
	if ve == 6 begin
		vc := 0b00100000
		vc &= v5
		if vc == 0b00100000 begin
			vf := 1
			return
		else
			v5 += 0b00100000
		end		
	end
	
	if ve == 7 begin
		vc := 0b01000000
		vc &= v5
		if vc == 0b01000000 begin
			vf := 1
			return
		else
			v5 += 0b01000000
		end		
	end
	
	if ve == 8 begin
		vc := 0b10000000
		vc &= v5
		if vc == 0b10000000 begin
			vf := 1
			return
		else
			v5 += 0b10000000
		end		
	end
	
	if ve == 9 begin
		if v6 == 0b00000001 begin
			vf := 1
			return
		else
			if ve == 9 then v6 := 0b00000001
		end
	end	
;


: main
  draw-grid
	draw-player-turn
	
	turn := 0  #X's turn
	numofmoves := 0
	v3 := 0b00000000
	v4 := 0b00000000
	v5 := 0b00000000
	v6 := 0b00000000
	
	va := 28
	vb := 13
	i := foreground-block
	sprite va vb 7
	
	loop		
		vf := key
		if vf == W_KEY begin
			if vb != 5 begin
				sprite va vb 7	# clear current X or O
				vb -= 8
				sprite va vb 7
			end
		end
		if vf == A_KEY begin
			if va != 20 begin
				sprite va vb 7	# clear current X or O
				va -= 8
				sprite va vb 7
			end
		end
		if vf == S_KEY begin
			if vb != 21 begin
				sprite va vb 7	# clear current X or O
				vb += 8
				sprite va vb 7
			end
		end
		if vf == D_KEY begin
			if va != 36 begin
				sprite va vb 7	# clear current X or O
				va += 8
				sprite va vb 7
			end
		end
		if vf == E_KEY begin
			handle-e-press		
		end
		
	again
	
	

